# GitHub Actions workflow to run API tests on pull requests
name: API Tests

on:
  pull_request:
    branches: [main]

jobs:
  test:
    name: Run API Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Create .env file
        run: |
          cat > .env << 'EOL'
          # API Configuration
          API_BASE_URL=https://gorest.co.in
          API_TIMEOUT=30000

          # Authentication
          AUTH_TOKEN=518db8d9e9fd98e14b9a8a11e547666ae90d42eea2bc0f8255a46fd6ced165b3

          # Test Configuration
          TEST_TIMEOUT=30000
          TEST_RETRIES=3

          # Logging
          LOG_LEVEL=debug
          ENABLE_REQUEST_LOGGING=true
          ENABLE_RESPONSE_LOGGING=true

          # Environment
          NODE_ENV=test
          EOL

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test:ci

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            junit.xml
            coverage/

      - name: Comment PR with test results summary
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v2.12.0
        with:
          files: junit.xml

      # Run tests
      - name: Run tests
        run: npm run test:ci

      # Upload test artifacts
      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        if: always()  # Run even if previous steps fail
        with:
          name: test-artifacts
          path: |
            junit.xml
            coverage/

      # Add test results as PR comment
      - name: Comment PR with test results summary
        uses: EnricoMi/publish-unit-test-result-action@v2.12.0
        if: always()  # Run even if previous steps fail
        with:
          files: junit.xml

